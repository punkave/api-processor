#!/usr/bin/env node

var program = require('commander'),
    fs = require('fs'),
    nansen = require('../lib/nansen'),
    pjson = require('../package.json'),
    colors = require('colors');


var options = {};


var version = function(){
  console.log('');
  console.log('\tnansen version '+ pjson.version);
}
var set = function(option, param) {
  options[option] = param;
}

program
  .usage('[options] <config_file>')
  .option('-v, --version', 'output of the version number', version)
  .option('-V, --verbose', 'Verbose Logging', set('verbose', true))
  .option('-d --debug', 'Log debug info', set('debug', true))
  .option('-p --parallel', 'Process Get and Post requests in Parallel', set('parallel', true));


program.parse(process.argv);

if (process.argv.length <= 2) {
  program.help();

} else if (process.argv.length > 2){

  for(var i=2; i < process.argv.length; i++) {
    if (process.argv[i].indexOf('-') == 0) { continue; }
    try{
      var config = require(process.argv[i]);
      nansen.job(config, options);
    } catch(e){
      console.log('');
      console.log(("Error reading config file ").red + process.argv[i]);
      console.log(e);
      console.log('');
    }
  }
  if (nansen.ready()) nansen.run();
}